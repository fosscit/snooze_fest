name: Build and Release

on:
  # Run on pushes to main to ensure it builds correctly
  push:
    branches:
      - main
  # Run on pull requests to main for validation
  pull_request:
    branches:
      - main
  # Trigger the release job ONLY when a new tag is pushed
  release:
    types: [created]

jobs:
  build:
    # This job now only builds and tests on pushes/PRs to main.
    # It does NOT release.
    name: Build & Verify
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter --version
      - name: Install Dependencies
        run: flutter pub get
      - name: Build APK (for verification)
        run: flutter build apk

  create-release:
    # This job only runs when a release is created (i.e., a tag is pushed)
    name: Build & Release
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter --version
      - name: Install Dependencies
        run: flutter pub get
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties
      - name: Build Release APK
        run: flutter build apk --release
      
      - name: Update Release with Artifact
        uses: ncipollo/release-action@v1
        with:
          # This allows the action to find the release that triggered the workflow
          allowUpdates: true 
          # The artifact to upload
          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
          # Your GitHub token
          token: ${{ secrets.GITHUB_TOKEN }}